{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new storage account created to store the VMs disks"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network to Create"
      },
      "defaultValue": "adVNET"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "adSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet created in the new VNET"
      },
      "defaultValue": "adSubnet"
    },
    "adSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet created in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "DomainName": {
      "type": "string",
      "metadata": {
        "description": "Full name for the forest root domain"
      },
      "defaultValue": "contoso.com"
    },
    "RootDC1Name": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the first DC of the root domain."
      },
      "defaultValue": "rootdc1"
    },
    "RootDC1IPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the first DC of the root domain"
      },
      "defaultValue": "10.0.0.4"
    },
    "RootDC2Name": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the second DC of the root domain."
      },
      "defaultValue": "rootdc2"
    },
    "RootDC2IPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the second DC of the root domain"
      },
      "defaultValue": "10.0.0.5"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the admin account for the Domain"
      },
      "defaultValue": "adAdministrator"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "VMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14",
        "Standard_D1_v2",
        "Standard_DS1_v2",
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D3_v2",
        "Standard_DS3_v2",
        "Standard_D4_v2",
        "Standard_DS4_v2",
        "Standard_D11_v2",
        "Standard_DS11_v2",
        "Standard_D12_v2",
        "Standard_DS12_v2",
        "Standard_D13_v2",
        "Standard_DS13_v2",
        "Standard_D14_v2",
        "Standard_DS14_v2"
      ],
      "metadata": {
        "description": "The size of the VM Created"
      },
      "defaultValue": "Standard_DS2_v2"
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows Server Version. "
      }
    },
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources such as templates and DSC modules that the script depends on."
      },
      "defaultValue": "https://raw.githubusercontent.com/wkasdorp/forest-2-domains/master"
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "adNSGName": "[concat(parameters('adSubnetName'),'NSG')]",

    "adSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('adSubnetName'))]",
    "adNSGName": "[concat(parameters('adSubnetName'),'NSG')]",
    "adAvailabilitySetName": "adAvailabilitySet",

    "newVMTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/CreateAndPrepnewVM.json')]",
    "vnetTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/vnet.json')]",
    "nicTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/nic.json')]",
    "vnetwithDNSTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/vnet-with-dns-server.json')]",
    "configureADNextDCTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/configureADNextDC.json')]",
    "createForestTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/createForest.json')]",
    "nextDCConfigurationModulesURL": "[concat(parameters('assetLocation'),'/DSC/ConfigureADNextDC.ps1.zip')]",
    "nextDCConfigurationFunction": "ConfigureADNextDC.ps1\\ConfigureADNextDC"
  },
  "resources": [
    {
      "name": "[parameters('newStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-05-01",
      "location": "[resourceGroup().location]",
      "properties": {
      },
      "sku": { "name": "[parameters('storageAccountType')]" },
      "kind": "Storage"
    },
    {
      "name": "[variables('adAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]"
    },
    {
      "name": "VNet",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[parameters('adSubnet')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('adNSGName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Any_RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "Block_DNS_UDP_to_stop_patching",
            "properties": {
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "53",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 210,
              "direction": "Outbound"
            }
          },
          {
            "name": "Block_DNS_TCP_to_stop_patching",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "53",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 220,
              "direction": "Outbound"
            }
          }
        ]
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet"
      ]
    },

    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(parameters('virtualNetworkName'), '/', parameters('adSubnetName'))]",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressPrefix": "[parameters('adSubnet')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNSGName'))]"
        }
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNSGName'))]"
      ]
    },

    {
      "name": "CreateADVM1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments','VNet')]",
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('newVMTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "storageAccountName": {
            "value": "[parameters('newStorageAccountname')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitysetName')]"
          },
          "vmName": {
            "value": "[parameters('RootDC1Name')]"
          },
          "vmIpAddress": {
            "value": "[parameters('RootDC1IPAddress')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "Standard_DS2_v2"
          },
          "imageSKU": {
            "value": "2012-R2-Datacenter"
          },
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          }
        }
      }
    },

    {
      "name": "CreateForest",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateADVM1"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createForestTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[parameters('RootDC1Name')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "DNSForwarder": {
            "value":  "[parameters('RootDC1IPAddress')]"
          },
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          }
        }
      }
    },
    {
      "name": "CreateADVM2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments','VNet')]",
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('newVMTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "storageAccountName": {
            "value": "[parameters('newStorageAccountname')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitysetName')]"
          },
          "vmName": {
            "value": "[parameters('RootDC2Name')]"
          },
          "vmIpAddress": {
            "value": "[parameters('RootDC2IPAddress')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "Standard_DS2_v2"
          },
          "imageSKU": {
            "value": "2012-R2-Datacenter"
          },
          "assetLocation": {
            "value": "[parameters('assetLocation')]"
          }
        }
      }
    },

    {
      "name": "ConfiguringRootDC2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreateADVM2",
        "Microsoft.Resources/deployments/CreateForest"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configureADNextDCTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adNextDCVMName": {
            "value": "[parameters('RootDC2Name')]"
          },

          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "DNSServer": {
            "value": "[parameters('RootDC1IPAddress')]"
          },
          "adNextDCConfigurationFunction": {
            "value": "[variables('nextDCConfigurationFunction')]"
          },
          "adNextDCConfigurationModulesURL": {
            "value": "[variables('nextDCConfigurationModulesURL')]"
          }
        }
      }
    }
  ]
}


