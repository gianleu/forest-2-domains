{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new storage account created to store the VMs disks"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network to Create"
      },
      "defaultValue": "adVNET"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "adSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet created in the new VNET"
      },
      "defaultValue": "adSubnet"
    },
    "adSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet created in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "adRootDC1NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the first forest root DC"
      },
      "defaultValue": "10.0.0.4"
    },
    "adRootDC2NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the second forest root DC"
      },
      "defaultValue": "10.0.0.5"
    },
    "adRootDC1VMName": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the first DC of the root domain."
      },
      "defaultValue": "rootdc1"
    },
    "adRootDC2VMName": {
      "type": "string",
      "metadata": {
        "description": "The computer name of the second DC of the root domain."
      },
      "defaultValue": "rootdc2"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the admin account for the Domain"
      },
      "defaultValue": "adAdministrator"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "adVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14",
        "Standard_D1_v2",
        "Standard_DS1_v2",
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D3_v2",
        "Standard_DS3_v2",
        "Standard_D4_v2",
        "Standard_DS4_v2",
        "Standard_D11_v2",
        "Standard_DS11_v2",
        "Standard_D12_v2",
        "Standard_DS12_v2",
        "Standard_D13_v2",
        "Standard_DS13_v2",
        "Standard_D14_v2",
        "Standard_DS14_v2"
      ],
      "metadata": {
        "description": "The size of the VM Created"
      },
      "defaultValue": "Standard_DS2_v2"
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows Server Version. "
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN for the forest root domain"
      }
    },
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources such as templates and DSC modules that the script depends on."
      },
      "defaultValue": "https://raw.githubusercontent.com/wkasdorp/forest-2-domains/master"
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "adSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('adSubnetName'))]",
    "adNSGName": "[concat(parameters('adSubnetName'),'NSG')]",
    "adRootDC1PublicIPName": "[concat(parameters('adRootDC1VMName'),'PublicIP')]",
    "adRootDC1NicName": "[concat(parameters('adRootDC1VMName'),'Nic')]",
    "adRootDC1NicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adRootDC1NicName'))]",
    "adRootDC1IPConfigID": "[concat(variables('adRootDC1NicId'),'/ipConfigurations/ipconfig1')]",
    "adRootDC2PublicIPName": "[concat(parameters('adRootDC2VMName'),'PublicIP')]",
    "adRootDC2NicName": "[concat(parameters('adRootDC2VMName'),'Nic')]",
    "adRootDC2NicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adRootDC2NicName'))]",
    "adRootDC2IPConfigID": "[concat(variables('adRootDC2NicId'),'/ipConfigurations/ipconfig1')]",
    "adRootDC1DataDisk": "[concat(parameters('adRootDC1VMName'),'DataDisk')]",
    "adRootDC2DataDisk": "[concat(parameters('adRootDC2VMName'),'DataDisk')]",
    "adAvailabilitySetName": "adAvailabilitySet",
    "adDataDiskSize": 1000,

    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",

    "vnetTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/vnet.json')]",
    "nicTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/nic.json')]",
    "vnetwithDNSTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/vnet-with-dns-server.json')]",
    "configureADNextDCTemplateUri": "[concat(parameters('assetLocation'),'/nestedtemplates/configureADNextDC.json')]",
    "adRootDC1ModulesURL": "[concat(parameters('assetLocation'),'/DSC/CreateADRootDC1.ps1.zip')]",
    "adRootDC1ConfigurationFunction": "CreateADRootDC1.ps1\\CreateADRootDC1",
    "adRootDC2PreparationModulesURL": "[concat(parameters('assetLocation'),'/DSC/PrepareADNextDC.ps1.zip')]",
    "adRootDC2PreparationFunction": "PrepareADNextDC.ps1\\PrepareADNextDC",
    "adRootDC2ConfigurationModulesURL": "[concat(parameters('assetLocation'),'/DSC/ConfigureADNextDC.ps1.zip')]",
    "adRootDC2ConfigurationFunction": "ConfigureADNextDC.ps1\\ConfigureADNextDC"
  },
  "resources": [
    {
      "name": "[parameters('newStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-05-01",
      "location": "[resourceGroup().location]",
      "properties": {
      },
      "sku": { "name": "[parameters('storageAccountType')]" },
      "kind": "Storage"
    },
    {
      "name": "[variables('adAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]"
    },
    {
      "name": "VNet",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[parameters('adSubnet')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('adNSGName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Any_RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet"
      ]
    },
    {
      "name": "[variables('adRootDC1PublicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('adRootDC1VMName'),'-',uniqueString(resourceGroup().id))]"
        }
      }
    },

    {
      "name": "[variables('adRootDC1NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('adRootDC1PublicIPName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('adRootDC1NicIPAddress')]",
              "subnet": {
                "id": "[variables('adSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adRootDC1PublicIPName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('adRootDC2PublicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('adRootDC2VMName'),'-',uniqueString(resourceGroup().id))]"
        }
      }
    },
    {
      "name": "[variables('adRootDC2NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Resources/deployments/VNet",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('adRootDC2PublicIPName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('adRootDC2NicIPAddress')]",
              "subnet": {
                "id": "[variables('adSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adRootDC2PublicIPName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('adRootDC1VMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('adRootDC1NicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('adVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('adRootDC1VMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds0/','osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds0/', variables('adRootDC1DataDisk'),'-1.vhd')]"
              },
              "name": "[concat(parameters('adRootDC1VMName'),'-data-disk1')]",
              "caching": "None",
              "diskSizeGB": "[variables('adDataDiskSize')]",
              "lun": 0,
              "createOption": "empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adRootDC1NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "adRootDC1EnablePSScript",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('adRootDC1VMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
              "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -encodedcommand cwBlAHQALQBlAHgAZQBjAHUAdABpAG8AbgBwAG8AbABpAGMAeQAgAHUAbgByAGUAcwB0AHIAaQBjAHQAZQBkAA=="
            }
          }
        },
        {
          "name": "[concat(parameters('adRootDC1VMName'),'/CreateADForest')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "apiVersion": "2016-03-30",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('adRootDC1VMName'))]",
            "adRootDC1EnablePSScript"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.21",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[variables('adRootDC1ModulesURL')]",
              "ConfigurationFunction": "[variables('adRootDC1ConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },

    {
      "name": "UpdateVNetDNS1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('adRootDC1VMName'),'/extensions/CreateADForest')]",
        "adRootDC1EnablePSScript"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[parameters('adSubnet')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adRootDC1NicIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "UpdateRootDC2NIC",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('adRootDC2NicName'))]",
        "Microsoft.Resources/deployments/UpdateVNetDNS1"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('adRootDC2NicName')]"
          },
          "ipConfigurations": {
            "value": [
              {
                "name": "ipconfig1",
                "properties": {
                  "privateIPAllocationMethod": "Static",
                  "privateIPAddress": "[parameters('adRootDC2NicIPAddress')]",
                  "subnet": {
                    "id": "[variables('adSubnetRef')]"
                  },
                  "publicIPAddress": {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adRootDC2PublicIPName'))]"
                  }
                }
              }
            ]
          },
          "dnsServers": {
            "value": [
              "[parameters('adRootDC1NicIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "[parameters('adRootDC2VMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',variables('adRootDC2NicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('adVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('adRootDC2VMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds1/','osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds1/', variables('adRootDC2DataDisk'),'-1.vhd')]"
              },
              "name": "[concat(parameters('adRootDC2VMName'),'-data-disk1')]",
              "caching": "None",
              "diskSizeGB": "[variables('adDataDiskSize')]",
              "lun": 0,
              "createOption": "empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('adRootDC2NicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "adRootDC2EnablePSScript",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('adRootDC2VMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "protectedSettings": {
              "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -encodedcommand cwBlAHQALQBlAHgAZQBjAHUAdABpAG8AbgBwAG8AbABpAGMAeQAgAHUAbgByAGUAcwB0AHIAaQBjAHQAZQBkAA=="
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('adRootDC2VMName'),'/PrepareNextDC')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('adRootDC2VMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.21",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('adNextDCPreparationModulesURL')]",
          "ConfigurationFunction": "[variables('adNextDCPreparationFunction')]",
          "Properties": {
            "DNSServer": "[parameters('adRootDC1NicIPAddress')]"
          }
        }
      }
    },
    {
      "name": "ConfiguringRootDC2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('adRootDC2VMName'),'/extensions/PrepareNextDC')]",
        "Microsoft.Resources/deployments/UpdateRootDC2NIC"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configureADNextDCTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adNextDCVMName": {
            "value": "[parameters('adRootDC2VMName')]"
          },
          "location": {
            "value": "[resourceGroup().location]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adNextDCConfigurationFunction": {
            "value": "[variables('adNextDCConfigurationFunction')]"
          },
          "adNextDCConfigurationModulesURL": {
            "value": "[variables('adNextDCConfigurationModulesURL')]"
          }
        }
      }
    },
    {
      "name": "UpdateVNetDNS2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-09-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringRootDC2"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnetName": {
            "value": "[parameters('adSubnetName')]"
          },
          "subnetRange": {
            "value": "[parameters('adSubnet')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adRootDC1NicIPAddress')]",
              "[parameters('adRootDC2NicIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(parameters('virtualNetworkName'), '/', parameters('adSubnetName'))]",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressPrefix": "[parameters('adSubnet')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNSGName'))]"
        }
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdateVNetDNS2"
      ]
    }
  ]
}